# Generated by Django 5.2 on 2025-04-26 18:27

import datetime
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('CityID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('CityName', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'City',
            },
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('GenderID', models.UUIDField(default=uuid.UUID('648c2c72-75f0-4c83-8a0e-62280d90759a'), editable=False, primary_key=True, serialize=False)),
                ('Gender', models.CharField(max_length=25)),
            ],
            options={
                'db_table': 'Gender',
            },
        ),
        migrations.CreateModel(
            name='PaymentType',
            fields=[
                ('PaymentTypeID', models.UUIDField(default=uuid.UUID('e3e156c7-c58d-4a9f-8b2a-17ca89da1ff8'), editable=False, primary_key=True, serialize=False)),
                ('PaymentTypeName', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'PaymentType',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('StatusID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('Status', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'Status',
            },
        ),
        migrations.CreateModel(
            name='UserTypes',
            fields=[
                ('UserTypeID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('UserType', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'UserTypes',
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('UserID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('FirstName', models.CharField(max_length=150)),
                ('LastName', models.CharField(default='', max_length=50)),
                ('ProfileImage', models.CharField(default='', max_length=300)),
                ('Email', models.EmailField(max_length=200, unique=True)),
                ('UserName', models.CharField(max_length=100, unique=True)),
                ('PhoneNumber', models.CharField(max_length=15, null=True)),
                ('StartDate', models.DateTimeField(default=django.utils.timezone.now)),
                ('LastLogin', models.DateTimeField(auto_now=True)),
                ('LastLogout', models.DateTimeField(auto_now=True)),
                ('IsActive', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('LoginTry', models.IntegerField(default=0, null=True)),
                ('LoginStatus', models.CharField(default='', max_length=40)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('UserType', models.ForeignKey(db_column='UserType', on_delete=django.db.models.deletion.CASCADE, to='mainapp.usertypes')),
            ],
            options={
                'db_table': 'Users',
            },
        ),
        migrations.CreateModel(
            name='OTPData',
            fields=[
                ('OTPDataID', models.UUIDField(default=uuid.UUID('484c9626-a0f1-4785-9590-b19ba10242e4'), editable=False, primary_key=True, serialize=False)),
                ('OTP', models.CharField(max_length=6)),
                ('IsValid', models.BooleanField(default=True)),
                ('ValidDateTill', models.DateField()),
                ('ValidTimeTill', models.TimeField()),
                ('OTPUser', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'OTPData',
            },
        ),
        migrations.CreateModel(
            name='ErrorMessages',
            fields=[
                ('ErrorMessageID', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('ErrorTitle', models.CharField(max_length=100)),
                ('ErrorLogs', models.TextField()),
                ('CreatedAt', models.DateTimeField(default=datetime.datetime.now)),
                ('UpdatedAt', models.DateTimeField(auto_now_add=True, null=True)),
                ('User', models.ForeignKey(db_column='UserID', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('Status', models.ForeignKey(db_column='StatusID', null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.status')),
            ],
            options={
                'db_table': 'ErrorMessages',
            },
        ),
    ]
